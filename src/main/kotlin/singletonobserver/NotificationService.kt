package singletonobserver

import factory.Account

/**
 * ðŸ”” NotificationService (Singleton)
 *
 * ðŸ‘‰ Máº«u thiáº¿t káº¿: Singleton + Observer
 * - Singleton: Ä‘áº£m báº£o chá»‰ cÃ³ má»™t trung tÃ¢m thÃ´ng bÃ¡o duy nháº¥t trong toÃ n há»‡ thá»‘ng.
 * - Observer: láº¯ng nghe vÃ  pháº£n há»“i khi sá»‘ dÆ° tÃ i khoáº£n thay Ä‘á»•i.
 */
class NotificationService private constructor() : AccountObserver {

    override fun onBalanceChanged(account: Account, newBalance: Double) {
        println("ðŸ“¢ [ThÃ´ng bÃ¡o] Sá»‘ dÆ° tÃ i khoáº£n ${account.accountNumber} cá»§a ${account.accountName} hiá»‡n lÃ  $newBalance")
    }

    companion object {
        // ðŸ”’ Biáº¿n instance tÄ©nh, chá»‰ khá»Ÿi táº¡o duy nháº¥t má»™t láº§n (lazy)
        val instance: NotificationService by lazy { NotificationService() }
    }
}
